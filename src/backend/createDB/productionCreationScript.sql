use `svnt49svechz60pj`;


-- MySQL Script generated by MySQL Workbench
-- Mon Oct 19 19:36:24 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Message`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Message` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Message` (
  `message_id` INT NOT NULL AUTO_INCREMENT,
  `thread_id` INT NOT NULL,
  `sending_user_id` INT NOT NULL,
  `message_body` BLOB NOT NULL,
  `sent_date_time` DATETIME NOT NULL,
  PRIMARY KEY (`message_id`),
  CONSTRAINT `sending_user_id`
    FOREIGN KEY (`sending_user_id`)
    REFERENCES `svnt49svechz60pj`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `message_thread_id`
    FOREIGN KEY (`thread_id`)
    REFERENCES `svnt49svechz60pj`.`Thread` (`thread_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `sending_user_id_idx` ON `svnt49svechz60pj`.`Message` (`sending_user_id` ASC) VISIBLE;

CREATE INDEX `thread_id_idx` ON `svnt49svechz60pj`.`Message` (`thread_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Movie`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Movie` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Movie` (
  `movie_id` INT NOT NULL AUTO_INCREMENT,
  `title` VARCHAR(150) NOT NULL,
  `cast` BLOB NOT NULL,
  `plot` BLOB NOT NULL,
  `duration` INT(3) NOT NULL,
  `rated` VARCHAR(10) NOT NULL,
  `poster_URL` VARCHAR(200) NOT NULL,
  `genre` VARCHAR(150) NOT NULL,
  `release_date` DATE NOT NULL,
  `director` VARCHAR(150) NULL,
  PRIMARY KEY (`movie_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`MovieTicket`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`MovieTicket` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`MovieTicket` (
  `movie_ticket_id` INT NOT NULL AUTO_INCREMENT,
  `transaction_id` INT NOT NULL,
  `showing_id` INT NOT NULL,
  `seat_id` INT NULL,
  `total_viewers` INT NULL,
  PRIMARY KEY (`movie_ticket_id`),
  CONSTRAINT `ticket_seat_id`
    FOREIGN KEY (`seat_id`)
    REFERENCES `svnt49svechz60pj`.`Seat` (`seat_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `ticket_showing_id`
    FOREIGN KEY (`showing_id`)
    REFERENCES `svnt49svechz60pj`.`Showing` (`showing_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `ticket_transaction_id`
    FOREIGN KEY (`transaction_id`)
    REFERENCES `svnt49svechz60pj`.`Transaction` (`transaction_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `showing_id_idx` ON `svnt49svechz60pj`.`MovieTicket` (`showing_id` ASC) VISIBLE;

CREATE INDEX `transaction_id_idx` ON `svnt49svechz60pj`.`MovieTicket` (`transaction_id` ASC) VISIBLE;

CREATE INDEX `ticket_seat_id_idx` ON `svnt49svechz60pj`.`MovieTicket` (`seat_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `seat_showing` ON `svnt49svechz60pj`.`MovieTicket` (`showing_id` ASC, `seat_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Screen`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Screen` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Screen` (
  `screen_id` INT NOT NULL AUTO_INCREMENT,
  `theater_id` INT NOT NULL,
  `screen_name` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`screen_id`),
  CONSTRAINT `screen_theater_id`
    FOREIGN KEY (`theater_id`)
    REFERENCES `svnt49svechz60pj`.`Theater` (`theater_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `theater_id_idx` ON `svnt49svechz60pj`.`Screen` (`theater_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `theater_screen_name` ON `svnt49svechz60pj`.`Screen` (`screen_name` ASC, `theater_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Seat`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Seat` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Seat` (
  `seat_id` INT NOT NULL AUTO_INCREMENT,
  `screen_id` INT NOT NULL,
  `row_name` VARCHAR(5) NOT NULL,
  `seat_number` INT(3) NOT NULL,
  `blocked` BIT NULL,
  `wheelchair` BIT NULL,
  PRIMARY KEY (`seat_id`),
  CONSTRAINT `seat_screen_id`
    FOREIGN KEY (`screen_id`)
    REFERENCES `svnt49svechz60pj`.`Screen` (`screen_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `screen_id_idx` ON `svnt49svechz60pj`.`Seat` (`screen_id` ASC) VISIBLE;

CREATE UNIQUE INDEX `screen_seat` ON `svnt49svechz60pj`.`Seat` (`screen_id` ASC, `row_name` ASC, `seat_number` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Showing`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Showing` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Showing` (
  `showing_id` INT NOT NULL AUTO_INCREMENT,
  `screen_id` INT NOT NULL,
  `movie_id` INT NOT NULL,
  `start_date_time` DATETIME NOT NULL,
  `price` DECIMAL(6,2) NOT NULL,
  `cancelled` BIT(1) NULL,
  PRIMARY KEY (`showing_id`),
  CONSTRAINT `showing_screen_id`
    FOREIGN KEY (`screen_id`)
    REFERENCES `svnt49svechz60pj`.`Screen` (`screen_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `showingl_movie_id`
    FOREIGN KEY (`movie_id`)
    REFERENCES `svnt49svechz60pj`.`Movie` (`movie_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `screen_id_idx` ON `svnt49svechz60pj`.`Showing` (`screen_id` ASC) VISIBLE;

CREATE INDEX `movie_id_idx` ON `svnt49svechz60pj`.`Showing` (`movie_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Theater`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Theater` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Theater` (
  `theater_id` INT NOT NULL AUTO_INCREMENT,
  `theater_name` VARCHAR(100) NOT NULL,
  `theater_address` VARCHAR(150) NOT NULL,
  `theater_phone` VARCHAR(15) NOT NULL,
  PRIMARY KEY (`theater_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Thread`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Thread` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Thread` (
  `thread_id` INT NOT NULL AUTO_INCREMENT,
  `subject` VARCHAR(50) NOT NULL,
  `resolved` BIT NULL,
  PRIMARY KEY (`thread_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`ThreadParticipant`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`ThreadParticipant` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`ThreadParticipant` (
  `user_id` INT NOT NULL,
  `thread_id` INT NOT NULL,
  PRIMARY KEY (`thread_id`, `user_id`),
  CONSTRAINT `participant_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `svnt49svechz60pj`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `participant_thread_id`
    FOREIGN KEY (`thread_id`)
    REFERENCES `svnt49svechz60pj`.`Thread` (`thread_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `thread_id_idx` ON `svnt49svechz60pj`.`ThreadParticipant` (`thread_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`Transaction`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`Transaction` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`Transaction` (
  `transaction_id` INT NOT NULL AUTO_INCREMENT,
  `user_id` INT NOT NULL,
  `total_price` DECIMAL(6,2) NOT NULL,
  PRIMARY KEY (`transaction_id`),
  CONSTRAINT `transaction_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `svnt49svechz60pj`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_id_idx` ON `svnt49svechz60pj`.`Transaction` (`user_id` ASC) VISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`User`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`User` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`User` (
  `user_id` INT NOT NULL AUTO_INCREMENT,
  `first_name` VARCHAR(100) NOT NULL,
  `last_name` VARCHAR(100) NOT NULL,
  `middle_name` VARCHAR(100) NULL,
  `birthday` DATE NOT NULL,
  `email` VARCHAR(200) NOT NULL,
  `password` VARCHAR(100) NOT NULL,
  `type` CHAR(1) NOT NULL,
  `disabled` BIT NULL,
  PRIMARY KEY (`user_id`))
ENGINE = InnoDB;

CREATE UNIQUE INDEX `email` ON `svnt49svechz60pj`.`User` (`email` ASC) INVISIBLE;


-- -----------------------------------------------------
-- Table `svnt49svechz60pj`.`UserReadMessage`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `svnt49svechz60pj`.`UserReadMessage` ;

CREATE TABLE IF NOT EXISTS `svnt49svechz60pj`.`UserReadMessage` (
  `message_id` INT NOT NULL,
  `user_id` INT NOT NULL,
  `read_date_time` DATETIME NOT NULL,
  PRIMARY KEY (`message_id`, `user_id`),
  CONSTRAINT `read_user_id`
    FOREIGN KEY (`user_id`)
    REFERENCES `svnt49svechz60pj`.`User` (`user_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION,
  CONSTRAINT `read_message_id`
    FOREIGN KEY (`message_id`)
    REFERENCES `svnt49svechz60pj`.`Message` (`message_id`)
    ON DELETE CASCADE
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `user_id_idx` ON `svnt49svechz60pj`.`UserReadMessage` (`user_id` ASC) VISIBLE;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
